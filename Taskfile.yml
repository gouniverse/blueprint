#
# This task file allows you to:
#  1. Serve the application for development
#  2. Deploy to cloud run
#
# Task file usage: https://taskfile.dev
#

version: '3'

vars:
  APPNAME: Welcome to Gouniverse Blueprint Project

tasks:
  # ========================== #
  # START: Help screem (Default)
  # ========================== #
  default:
    cmds:
        - echo "================================================================"
        - echo "=                                                              ="
        - echo "= Welcome to {{.APPNAME}}                                      ="
        - echo "=                                                              ="
        - echo "= Select an option from the list below                         ="
        - echo "=                                                              ="
        - echo "= 1. To run tests type 'task test'                             ="
        - echo "= 2. To create coverage report type 'task cover'               ="
        - echo "= 3. To initialize dev environment 'task dev:init'             ="
        - echo "= 4. To start development type 'task dev'                      ="
        - echo "= 5. To deploy to live type 'task deploy'                      ="
        - echo "=                                                              ="
        - echo "================================================================"
    silent: true
  # ========================== #
  # END: Help screem (Default) #
  # ========================== #

  cover:
    desc: Builds a coverage report
    cmds:
      - echo "Generating cover report..."
      - go test ./... -coverprofile=tmp/coverage.out  -covermode=count
      - go tool cover -html=tmp/coverage.out
      # Eventually add to workflow! - $GOPATH/bin/goveralls -coverprofile=coverage.out -service=travis-ci -repotoken=$COVERALLS_TOKEN
      - echo "Done!"
    silent: true

  # deploy-cloudrun:
  #   desc: Build and deploys the app to Google Cloud Run
  #   cmds:
  #     - gcloud config set account YOUREMAIL
  #     - gcloud config set project YOURPROJECT
  #     - gcloud config set run/region europe-west4
  #     - gcloud builds submit --tag gcr.io/YOURPROJECT/YOURPACKAGENAME
  #     - gcloud run deploy YOURAPPNAME --image gcr.io/YOURPROJECT/YOURPACKAGENAME --platform managed --region europe-west4 --allow-unauthenticated

  deploy-ssh:
    desc: Builds and deploys the app to VM (i.e. Digital Ocean) via SSH
    cmds:
      - go run cmd/deploy/main.go

  dev:init:
    desc: Initialize development environment (copies the .env_example to .env)
    cmds:
      - cp .env_example .env

  dev:
    desc: Start development locally
    cmds:
      - air

  nilaway:install:
    desc: Install nilaway or update to latest
    cmds:
      - echo "installing/updating nilaway..."
      - go install go.uber.org/nilaway/cmd/nilaway@latest

  nilaway:
    desc: Tests for nils
    cmds:
      - echo "testing for nils..."
      - nilaway ./...
      - echo "Done!"
    silent: true
    
  profile:
    cmds:
      - echo "Running tests..."
      - go test -cpuprofile=cpu.out ./...
      - go tool pprof cpu.out
      - go tool pprof -aloc_objects -top -cup mem.profile
      - go tool pprof -aloc_space -top -cup mem.out
      - go test -gcflags 'm = m'
      - echo "Done!"
    silent: true

  routes:
    desc: List app routes
    cmds:
      - echo "Listing routes..."
      - go run  . routes list
      - echo "Done!"
    silent: true

  test:
    cmds:
      - echo "Running tests..."
      - go test ./...
      - echo "Done!"
    silent: true

  swagger-spec:
    desc: Generate Swagger specification
    cmds:
      - go get -u github.com/go-swagger/go-swagger/cmd/swagger
      - swagger generate spec -o ./swagger.json
      
  swagger-ui:
    desc: Run the Swagger UI
    cmds:
      - docker run --rm -it -p 8081:8080 swaggerapi/swagger-ui
